{"version":3,"sources":["components/DrawForm.js","actions/createDraws.js","components/DrawList.js","components/Interpretations.js","components/Button.js","actions/deleteInterpretations.js","components/InterpretationForm.js","actions/createInterpretations.js","containers/InterpretationsContainer.js","components/Draw.js","actions/fetchCards.js","containers/DrawsContainer.js","actions/fetchDraws.js","components/CardList.js","components/Card.js","components/MajorArcana.js","components/MinorArcana.js","containers/CardsContainer.js","NavBar.js","App.js","index.js","reducers/drawReducer.js","reducers/cardReducer.js"],"names":["DrawForm","state","layout","card_ids","orientations","handleChange","e","setState","target","name","value","handleSumbit","preventDefault","formData","getOneCard","props","cards","randBool","createDraws","history","push","process","getThreeCards","threeBool","getFiveCards","fiveBool","getTenCards","tenBool","arr","Math","floor","random","length","id","base","r","indexOf","className","onSubmit","onChange","this","React","Component","connect","dispatch","fetch","method","headers","body","JSON","stringify","then","json","draws","type","payload","DrawList","map","draw","to","created_at","slice","filterList","filter","Interpretations","liked","handleDelete","interpretation","deleteInterpretations","draw_id","interpretations","onClick","drawID","interpretationID","InterpretationForm","createInterpretations","InterpretationsContainer","Draw","find","match","params","card_id","i","src","image","Container","Row","Col","sm","size","offset","fetchCards","sort","a","b","DrawsContainer","fetchDraws","path","render","routerProps","exact","CardList","card","meaning_up","meaning_rev","summary","Card","desc","MajorArcana","CardImg","top","width","CardBody","CardTitle","tag","CardSubtitle","MinorArcana","CardsContainer","NavBar","Navbar","dark","expand","Nav","navbar","NavItem","NavLink","href","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2c6f27df.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { createDraws } from '../actions/createDraws'\n\n\nclass DrawForm extends React.Component{\n\n  state = {\n    layout: \"One-Card\",\n    card_ids: [],\n    orientations: []\n  }\n\n  render() {\n    return(\n      <>\n      <div className=\"center drawlist\">\n        <form onSubmit={e => this.handleSumbit(e)}>\n          <select onChange={this.handleChange} name=\"layout\" value={this.state.layout}>\n            <option>One-Card</option>\n            <option>Three-Cards</option>\n            <option>Five-Cards</option>\n            <option>Celtic Cross</option>\n          </select>\n          <button>Draw Cards</button>\n        </form>\n         \n      </div>\n      {/* <img className=\"back\"src=\"tarotback.jpg\"/>  */}\n      \n      </>\n    )\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // would like to do this as a switch\n  handleSumbit = (e) =>{\n    e.preventDefault() \n    \n    if(this.state.layout == \"One-Card\"){\n    let formData = {\n      layout: this.state.layout,\n      card_ids: [this.getOneCard(this.props.cards)],\n      orientations: [this.randBool()]\n     }\n     this.props.createDraws(formData)\n     this.props.history.push(process.env.PUBLIC_URL +'/draws')\n    }else if(this.state.layout == \"Three-Cards\"){\n      let formData = {\n        layout: this.state.layout,\n        card_ids: this.getThreeCards(this.props.cards),\n        orientations: this.threeBool()\n       }\n       this.props.createDraws(formData)\n       this.props.history.push('/draws')\n    }else if(this.state.layout == \"Five-Cards\"){\n      let formData = {\n        layout: this.state.layout,\n        card_ids: this.getFiveCards(this.props.cards),\n        orientations: this.fiveBool()\n       }\n       this.props.createDraws(formData)\n       this.props.history.push('/draws')\n    }else if(this.state.layout == \"Celtic Cross\"){\n      let formData = {\n        layout: this.state.layout,\n        card_ids: this.getTenCards(this.props.cards),\n        orientations: this.tenBool()\n       }\n       this.props.createDraws(formData)\n       this.props.history.push(process.env.PUBLIC_URL +'/draws')\n    }\n  }\n  \n  // look into refactoring down to 2 methods\n  getOneCard = (arr) => {\n    const randomIndex = Math.floor(Math.random() * arr.length);\n    const item = arr[randomIndex];\n    return item.id;\n  }\n  randBool = () => {\n    const rb = Math.random() < 0.5;\n    return rb;\n  }\n  // how does this work??\n  getThreeCards = (arr) => {\n    const base = [];\n    while(base.length < 3){\n      const r = Math.floor(Math.random() * arr.length);\n      if(base.indexOf(r) === -1) base.push(r);\n    }\n    return base;\n  }\n  threeBool = () => {\n    const base = []\n    while(base.length < 3){\n      base.push(this.randBool())\n    }\n    return base\n  }\n  getFiveCards = (arr) => {\n    const base = [];\n    while(base.length < 5){\n      const r = Math.floor(Math.random() * arr.length);\n      if(base.indexOf(r) === -1) base.push(r);\n    }\n    return base;\n  }\n  fiveBool = () => {\n    const base = []\n    while(base.length < 5){\n      base.push(this.randBool())\n    }\n    return base\n  }\n  getTenCards = (arr) => {\n    const base = [];\n    while(base.length < 10){\n      const r = Math.floor(Math.random() * arr.length);\n      if(base.indexOf(r) === -1) base.push(r);\n    }\n    return base;\n  }\n  tenBool = () => {\n    const base = []\n    while(base.length < 10){\n      base.push(this.randBool())\n    }\n    return base\n  }\n\n\n}\n\nexport default connect(null,{createDraws})(DrawForm)\n\n\n// handleSumbit = (e) =>{\n  //   e.preventDefault() \n  //   switch(this.state.layout){\n  //     case \"One-Card\":\n  //     let formData = {\n  //       layout: this.state.layout,\n  //       card_ids: [this.getOneCard(this.props.cards)],\n  //       orientations: [this.randBool()]\n  //     }\n  //   case \"Three-Cards\":\n  //     let formData = {\n  //       layout: this.state.layout,\n  //       card_ids: this.getThreeCards(this.props.cards),\n  //       orientations: this.threeBool()\n  //      }\n  //   case \"Five-Cards\":\n  //     let formData = {\n  //       layout: this.state.layout,\n  //       card_ids: this.getFiveCards(this.props.cards),\n  //       orientations: this.fiveBool()\n  //      }\n  //     }\n  //      this.props.createDraws(formData)\n  //      this.props.history.push('/draws')\n    \n  // }","export const createDraws = (formData) =>{\n  return (dispatch) => {\n    fetch('https://tarot-trove-backend.herokuapp.com/api/v1/draws', {\n      // fetch('http://127.0.0.1:3000/api/v1/draws', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        },\n      body: JSON.stringify(formData)\n    })\n    .then(r=>r.json())\n    .then(draws=> dispatch({\n      type: \"CREATE_DRAW\", \n      payload: draws\n    }))\n  }\n}","\nimport React from 'react'\nimport {Link} from 'react-router-dom'\n// import { Container } from 'reactstrap';\n\nclass DrawList extends React.Component{\nstate = {\n    layout: \"\",\n    card_ids: [],\n    orientations: []\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n\nrender(){\n  if(this.state.layout == \"\" || this.state.layout == \"All Spreads\"){\n    return(\n      <>\n      <div className=\"blurb left drawlist\">\n        <p>Welcome!   </p>\n        \n        <p>This page is intended to aid in the study of Tarot Divination.</p>\n\n        <p>You're welcome to browse our previous draws and add your own thoughts, <br></br>\n          or create a brand new draw and be the first to offer an interpretation.\n        </p>\n        <p>We hope you enjoy the site!</p>\n      </div>\n      <div className='themed-container'>\n      {/* <Container className=\"themed-container\" fluid=\"md\"> */}\n      \n          <form className=\"right list option drawlist\" onSubmit={e => this.handleSumbit(e)}>\n            <select onChange={this.handleChange} name=\"layout\" value={this.state.layout}>\n              <option >All Spreads</option>\n              <option >One-Card</option>\n              <option >Three-Cards</option>\n              <option >Five-Cards</option>\n              <option >Celtic Cross</option>\n            </select>\n          </form><br></br>\n    \n          <div className=\"right list\">{this.props.draws.draws ? this.props.draws.draws.map(draw => \n   \n          <div key={draw.id}>\n            <Link className=\"list\" to={`/draws/${draw.id}`}>{draw.layout}: {draw.created_at.slice(0,10)}</Link></div>\n          ) : null}\n          </div>\n   \n      {/* </Container> */}\n      {/* <img className=\"back right\" src=\"./assets/tarotback.jpg\"/>   */}\n      </div>\n</>\n    )\n  }else{\n    const fullList = this.props.draws.draws\n    const filterList = fullList.filter(draw => draw.layout == this.state.layout)\n    return(     <>\n      <div className=\"blurb left drawlist\">\n        <p>Welcome!</p>\n        \n        <p>This page is intended to aid in the study of Tarot Divination.</p>\n\n        <p>You're welcome to browse our previous draws\n          and add your own thoughts, <br></br>\n          or create a brand new draw and be the first to offer an interpretation.\n        </p>\n        <p>We hope you enjoy the site!</p>\n      </div>\n      <div className='themed-container'>\n        \n         {/* <Container className=\"themed-container\" fluid=\"md\"> */}\n          <form className=\"drawlist right list option\" onSubmit={e => this.handleSumbit(e)}>\n            <select onChange={this.handleChange} name=\"layout\" value={this.state.layout}>\n              <option >All Spreads</option>\n              <option >One-Card</option>\n              <option >Three-Cards</option>\n              <option >Five-Cards</option>\n              <option >Celtic Cross</option>\n            </select>\n          </form><br></br>\n  \n        <div className=\"right list\" >{this.props.draws.draws ? filterList.map(draw => <div key={draw.id}>\n            <Link className=\"list\" to={`/draws/${draw.id}`}>{draw.layout}: {draw.created_at.slice(0,10)}</Link></div>\n          ) : null}</div>\n  \n  {/* </Container> */}\n      {/* <img className=\"back right readimg\" src=\"tarotback.jpg\"/>   */}\n      </div></>\n    )\n\n}\n\n}}\n\nexport default DrawList\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteInterpretations } from '../actions/deleteInterpretations'\nimport Button from './Button'\n\nclass Interpretations extends React.Component{\n\n  state = {\n    liked: 0\n  }\n\n  handleDelete = (interpretation) =>{\n  this.props.deleteInterpretations(interpretation.draw_id, interpretation.id)\n    }\n \n  render(){\n  \n  return (\n    \n    <div className=\"int blurb\">\n      Interpretation(s): \n      {this.props.draw ? this.props.draw.interpretations.map(interpretation => \n        <div key={interpretation.id}>\n          \n          <button onClick={() => this.handleDelete(interpretation)}>x</button> {interpretation.body}\n          {/* <Button /> */}\n          </div>) : null}<br></br>\n    </div>\n  )\n}}\n\nexport default connect(null,{ deleteInterpretations })(Interpretations)\n","import React from 'react'\n\nexport default class Button extends React.Component{\n\n  state = {\n    liked: 0\n  }\n\n  handleLike = () =>{\n    let newCount = this.state.liked + 1\n    this.setState(\n     {liked: newCount}\n    )}\n\n  render(){\n    \n    return(\n      <div>\n        <button onClick={this.handleLike} >Likes: {this.state.liked}</button>\n      </div>\n    )\n  }\n\n}","export const deleteInterpretations = (drawID, interpretationID) =>{\n  return (dispatch) => {\n    fetch(`https://tarot-trove-backend.herokuapp.com/api/v1/draws/${drawID}/interpretations/${interpretationID}`, {\n      method: \"DELETE\",\n    })\n    .then(r => r.json())\n    .then(draw=> dispatch({\n      type: \"DELETE_INTERPRETATION\", \n      payload: draw\n    }))\n  }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createInterpretations } from '../actions/createInterpretations'\n\nclass InterpretationForm extends React.Component{\n\n  state = {\n    body: \"\",\n  }\n  \n  handleChange = (e) =>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSumbit = (e) =>{\n    e.preventDefault()\n    this.props.createInterpretations(this.state, this.props.draw.id)\n    this.setState({\n      body: \"\"\n    })\n  \n  }\n\n  render() {\n    return(\n      <div className=\"Field\">\n        <form onSubmit={e => this.handleSumbit(e)}>\n          <textarea onChange={this.handleChange} \n          type='text' name=\"body\" value={this.state.body}/><br></br>\n          {/* name should match what's in the state */}\n          <button>Submit Interpretation</button>\n        </form>\n  {/* onSubmit and onChange are identical, the event isn't necessary */}\n      </div>\n    )\n  }\n}\n\nexport default connect(null,{createInterpretations})(InterpretationForm)","export const createInterpretations = (interpretation, drawID) =>{\n  return (dispatch) => {\n    fetch(`https://tarot-trove-backend.herokuapp.com/api/v1/draws/${drawID}/interpretations`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        },\n      body: JSON.stringify(interpretation)\n    })\n    .then(r=>r.json())\n    .then(draw=> dispatch({\n      type: \"CREATE_INTERPRETATIONS\", \n      payload: draw\n    }))\n  }\n}","import React from 'react'\nimport Interpretations from '../components/Interpretations'\nimport InterpretationsForm from '../components/InterpretationForm'\n\nclass InterpretationsContainer extends React.Component{\n  render(){\n    return(\n      <div>\n        <Interpretations draw={this.props.draw}/>\n        <InterpretationsForm draw={this.props.draw}/>\n      </div>\n    )\n  }\n}\n\nexport default InterpretationsContainer\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport InterpretationsContainer from '../containers/InterpretationsContainer'\nimport { Container, Row, Col } from 'reactstrap';\n\n \nconst Draw = props =>{ \n\n  let draw = props.draws.draws.find(draw => draw.id == props.match.params.id)\n\n  if(draw && draw.layout != \"Celtic Cross\"){\n    return(\n      <div className=\"notCross\" >\n      <div className=\"blurb\">Drawn: {draw ? (draw.created_at.slice(0,10)): null}<br></br></div>\n        {draw && (props.cards.length > 0) ? \n          <div>{draw.card_ids.map((card_id, i) => \n            <div key={card_id.id}> \n              <Link to={`/cards/${card_id - 1}`}>\n                {draw.orientations[i] === false ? \n                <img className=\"flip card space\" src={props.cards[card_id -1].image}/>\n                : <img className=\"card space\" src={props.cards[card_id - 1].image}/>}\n              </Link>\n            </div>)}\n          </div>\n        : null}\n        <InterpretationsContainer draw={draw} />\n      </div>)\n    }else if(draw && draw.layout == \"Celtic Cross\"){\n      return(\n        <Container>\n          {draw && (props.cards.length > 0) ? \n          <Container>\n      <div className=\"blurb\">Drawn: {draw ? (draw.created_at.slice(0,10)): null}<br></br></div>\n            <Row>\n            <Col sm={{ size: true, offset: 4 }}>\n              <div key={draw.card_ids[0].id}>\n                <Link to={`/cards/${draw.card_ids[0] - 1}`}>\n                      {draw.orientations[0] === false ? \n                      <img className=\"flip celtic\" src={props.cards[draw.card_ids[0] -1].image}/>\n                      : <img className=\"celtic\" src={props.cards[draw.card_ids[0] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col sm={{ size: true, offset: 4 }}>\n              <div key={draw.card_ids[1].id}>\n                <Link to={`/cards/${draw.card_ids[1] - 1}`}>\n                      {draw.orientations[1] === false ? \n                      <img className=\"flip celtic\" src={props.cards[draw.card_ids[1] -1].image}/>\n                      : <img className=\"celtic\" src={props.cards[draw.card_ids[1] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            </Row>\n\n            <Row>\n            <Col >\n              <div key={draw.card_ids[2].id}>\n                <Link to={`/cards/${draw.card_ids[2] - 1}`}>\n                      {draw.orientations[2] === false ? \n                      <img className=\"flip celtic\" src={props.cards[draw.card_ids[2] -1].image}/>\n                      : <img className=\"celtic\" src={props.cards[draw.card_ids[2] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col sm={{ size: true, offset: 2}}>\n              <div key={draw.card_ids[3].id}>\n                <Link to={`/cards/${draw.card_ids[3] - 1}`}>\n                      {draw.orientations[3] === false ? \n                      <img className=\"flip celtic base\" src={props.cards[draw.card_ids[3] -1].image}/>\n                      : <img className=\"celtic base\" src={props.cards[draw.card_ids[3] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col >\n              <div key={draw.card_ids[4].id}>\n                <Link to={`/cards/${draw.card_ids[4] - 1}`}>\n                      {draw.orientations[4] === false ? \n                      <img className=\"flip celtic cross\" src={props.cards[draw.card_ids[4] -1].image}/>\n                      : <img className=\"celtic cross\" src={props.cards[draw.card_ids[4] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col >\n              <div key={draw.card_ids[5].id}>\n                <Link to={`/cards/${draw.card_ids[5] - 1}`}>\n                      {draw.orientations[5] === false ? \n                      <img className=\"flip celtic future\" src={props.cards[draw.card_ids[5] -1].image}/>\n                      : <img className=\"celtic future\" src={props.cards[draw.card_ids[5] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col  >\n              <div key={draw.card_ids[6].id}>\n                <Link to={`/cards/${draw.card_ids[6] - 1}`}>\n                      {draw.orientations[6] === false ? \n                      <img className=\"flip celtic\" src={props.cards[draw.card_ids[6] -1].image}/>\n                      : <img className=\"celtic\" src={props.cards[draw.card_ids[6] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n\n\n            </Row>\n            <Row>\n            <Col sm={{ size: true, offset: 4 }}>\n              <div key={draw.card_ids[7].id}>\n                <Link to={`/cards/${draw.card_ids[7] - 1}`}>\n                      {draw.orientations[7] === false ? \n                      <img className=\"flip celtic\" src={props.cards[draw.card_ids[7] -1].image}/>\n                      : <img className=\"celtic\" src={props.cards[draw.card_ids[7] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col sm={{ size: true, offset: 4 }}>\n              <div key={draw.card_ids[8].id}>\n                <Link to={`/cards/${draw.card_ids[8] - 1}`}>\n                      {draw.orientations[8] === false ? \n                      <img className=\"flip celtic\" src={props.cards[draw.card_ids[8] -1].image}/>\n                      : <img className=\"celtic\" src={props.cards[draw.card_ids[8] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n\n            </Row>\n            <Row>\n            <Col sm={{ size: true, offset: 10 }}>\n              <div key={draw.card_ids[9].id}>\n                <Link to={`/cards/${draw.card_ids[9] - 1}`}>\n                      {draw.orientations[9] === false ? \n                      <img className=\"flip celtic\" src={props.cards[draw.card_ids[9] -1].image}/>\n                      : <img className=\"celtic\" src={props.cards[draw.card_ids[9] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            \n\n            </Row>\n          \n          </Container>\n\n          : null}\n\n          <InterpretationsContainer draw={draw} /> \n          \n        </Container>\n        )\n    }else{\n      return(\n        null\n      )\n    }\n  }\n  export default Draw\n\n","export function fetchCards(){\n  return (dispatch) => {\n    fetch('https://tarot-trove-backend.herokuapp.com/api/v1/cards')\n    .then(r=>r.json())\n    .then(cards=> dispatch({\n      type: \"FETCH_CARDS\", \n      // look at this\n      payload: cards.sort((a,b)=>a.id - b.id)\n    }))\n  }\n}","\nimport React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport DrawForm from '../components/DrawForm'\nimport DrawList from '../components/DrawList'\nimport Draw from '../components/Draw'\nimport { fetchDraws } from '../actions/fetchDraws'\nimport { fetchCards } from '../actions/fetchCards'\n\n\nclass DrawsContainer extends React.Component{\n\ncomponentDidMount(){\n  this.props.fetchDraws()\n  this.props.fetchCards()\n}\n\n    render(){\n      return(\n        <>\n          <Switch>\n            <Route path='/draws/new' render={(routerProps) => \n                <DrawForm {...routerProps} cards={this.props.cards} draws={this.props.draws} />} /> \n            <Route exact path='/draws' render={(routerProps) => \n                <DrawList {...routerProps} draws={this.props.draws} />} />\n            <Route path='/draws/:id' render={(routerProps) => \n              <>\n                <Draw {...routerProps} cards={this.props.cards} draws={this.props.draws} />\n              </> \n            }/>\n          </Switch>\n        </>\n      )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    draws: state.draws,\n    cards: state.cards\n  }\n}\n\nexport default connect(mapStateToProps, {fetchDraws, fetchCards})(DrawsContainer)","export function fetchDraws(){\n  return (dispatch) => {\n    fetch('https://tarot-trove-backend.herokuapp.com/api/v1/draws')\n    .then(r=>r.json())\n    .then(draws=> dispatch({\n      type: \"FETCH_DRAWS\", \n      payload: draws\n    }))\n  }\n}\n","import React from 'react'\n\nconst getRandomItem = (arr) => {\n  const randomIndex = Math.floor(Math.random() * arr.length);\n  const item = arr[randomIndex];\n  return item;\n}\n\nconst CardList = props =>{\n\n  const card = getRandomItem(props.cards);\n\n  return(\n    <div className=\"Field left\">\n       {card ? <img className=\"card left\" src={card.image}/> : null}<br></br>\n    <div className=\"single left\">\n    <div className=\"space\">Meaning(up): {card ? card.meaning_up : null}</div>\n    <div className=\"space\">Meaning(rev): {card ? card.meaning_rev : null}</div><br></br>\n    <div className=\"space\">Summary: {card ? card.summary : null}</div></div>\n  </div>\n  )\n}\n\nexport default CardList","import React from 'react'\n\nconst Card = props =>{\n  // debugger\n  let card = props.cards[props.match.params.id]\n  \n  return(\n    <div className=\"single\">\n    {card ? <img className=\"card left\"src={card.image}/> : null}<br></br>\n    <div className=\"left\">\n    <div>Description: {card ? card.desc : null}</div><br></br>\n    <div>Meaning(up): {card ? card.meaning_up : null}</div><br></br>\n    <div>Meaning(rev): {card ? card.meaning_rev : null}</div><br></br>\n    <div>Summary: {card ? card.summary : null}</div></div>\n  </div>\n  )\n}\n\nexport default Card","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {\n  Card, Container, Row, Col, CardImg, CardTitle,\n  CardSubtitle, CardBody\n} from 'reactstrap';\n\nconst MajorArcana = props =>{\n  return(\n\n    <Container>\n            <Row>\n        <div>{props.cards.slice(0,1).map(card => \n        <Col>\n          <Card key={card.id}>\n            <Link to={`/cards/${card.id - 1}`}>\n              <CardImg top width=\"100%\" src={card.image} />\n              <CardBody>          \n                <CardTitle className=\"CardTitle\"tag=\"h5\">{card.name}</CardTitle>\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>\n              </CardBody>\n            </Link>\n          </Card>\n        </Col>\n       )}</div>\n      </Row>\n      <Row>\n        <div>{props.cards.slice(1,8).map(card => \n        <Col>\n          <Card key={card.id}>\n            <Link to={`/cards/${card.id - 1}`}>\n              <CardImg top width=\"100%\" src={card.image} />\n              <CardBody>          \n                <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>\n              </CardBody>\n            </Link>\n          </Card>\n        </Col>\n       )}</div>\n      </Row>\n      <Row>\n        <div>{props.cards.slice(8,15).map(card => \n        <Col>\n          <Card key={card.id}>\n            <Link to={`/cards/${card.id - 1}`}>\n              <CardImg top width=\"100%\" src={card.image} />\n              <CardBody>          \n                <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>    \n              </CardBody>\n            </Link>\n          </Card>\n        </Col>\n       )}</div>\n      </Row>\n      <Row>\n        <div>{props.cards.slice(15,22).map(card => \n        <Col>\n          <Card key={card.id}>\n            <Link to={process.env.PUBLIC_URL +`/cards/${card.id - 1}`}>\n              <CardImg top width=\"100%\" src={card.image} />\n              <CardBody>          \n                <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>\n              </CardBody>\n            </Link>\n          </Card>\n        </Col>\n       )}</div>\n      </Row>\n  \n    </Container>\n  )\n}\n\nexport default MajorArcana\n\n\n    // <CardGroup>\n    //   <div>{props.cards.slice(0,21).map(card => \n    //     <Card key={card.id}>\n    //       <Link to={`/cards/${card.id - 1}`}>\n    //         <CardImg top width=\"100%\" src={card.image} />\n    //         <CardBody>          \n    //           <CardTitle tag=\"h5\">{card.name}</CardTitle>\n    //           <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>\n    //           <CardText>This is a wider card with supporting text below.</CardText>\n    //           <Button>Button</Button>\n    //         </CardBody>\n    //       </Link>\n    //     </Card>\n    //    )}</div>\n    // </CardGroup>","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {\n  Card, Container, Row, Col, CardImg, CardTitle, \n   CardBody\n} from 'reactstrap';\n\nconst MinorArcana = props =>{\n  return(  \n    \n    <Container className=\"left\">\n      <div className=\"suit\" >WANDS</div>\n    <Row className=\"xenter\" >\n      <div >{props.cards.slice(22,29).map(card => \n      <Col >\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(29,36).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\"tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row  >\n    <div className=\"suit\">CUPS</div>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(36,43).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(43,50).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <div className=\"suit\">PENTACLES</div>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(50,57).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(57,64).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <div className=\"suit\">SWORDS</div>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(64,71).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(71,78).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n</Container>\n\n\n  )\n}\n\nexport default MinorArcana\n\n  {/* <CardGroup>\n    <div>{props.cards.slice(22,78).map(card => \n      <Card key={card.id}>\n        <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n          <CardBody>          \n            <CardTitle tag=\"h5\">{card.name}</CardTitle>\n          </CardBody>\n        </Link>\n      </Card>\n    )}</div>\n  </CardGroup> */}","\nimport React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CardList from '../components/CardList'\nimport Card from '../components/Card'\nimport { fetchCards } from '../actions/fetchCards'\nimport MajorArcana from '../components/MajorArcana'\nimport MinorArcana from '../components/MinorArcana'\n\n\nclass CardsContainer extends React.Component{\n\ncomponentDidMount(){\n  this.props.fetchCards()\n}\n\n    render(){\n      return(\n        <>\n          <Switch>\n            <Route exact path='/cards'>\n                <CardList cards={this.props.cards}/>\n            </Route>\n            <Route path='/cards/:id' render={(routerProps) => \n                <Card {...routerProps} cards={this.props.cards} />}/>\n            <Route path='/majorarcana'>\n                <MajorArcana cards={this.props.cards}/>\n            </Route>\n            {/* <Route path={process.env.PUBLIC_URL +'/minorarcana'}> */}\n            <Route exact path='/minorarcana'>\n                <MinorArcana cards={this.props.cards}/>\n            </Route>\n          </Switch>\n        </>\n      )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    cards: state.cards\n  }\n}\n\nexport default connect(mapStateToProps, {fetchCards})(CardsContainer)","import {Link} from 'react-router-dom'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\n\nexport default function NavBar(){\n\nreturn (<>\n<Navbar dark expand=\"md\">\n<Nav className=\"mr-auto\" navbar>\n            <NavItem>\n  <NavLink href={process.env.PUBLIC_URL +'/draws'}>Readings</NavLink>\n  </NavItem>\n  <NavItem>\n  <NavLink href={process.env.PUBLIC_URL +\"/draws/new\"}>New Draw</NavLink>\n  </NavItem>\n  <NavItem>\n  <NavLink href={process.env.PUBLIC_URL +\"/cards\"}>Random Card</NavLink>\n  </NavItem>\n  <NavItem>\n  <NavLink href={process.env.PUBLIC_URL +\"/majorarcana\"}>Major Arcana</NavLink>\n  </NavItem>\n  <NavItem >\n  <NavLink  href={process.env.PUBLIC_URL +\"/minorarcana\"}>Minor Arcana</NavLink>\n  </NavItem>\n  </Nav>\n  {/* <Link to=\"/draws\" className=\"NavLink\">Readings</Link>\n  <Link to=\"/draws/new\" className=\"NavLink\">New Draw</Link>\n  <Link to=\"/cards\" className=\"NavLink\">Random Card</Link>\n  <Link to=\"/majorarcana\" className=\"NavLink\">MajorArcana</Link>\n  <Link to=\"/minorarcana\" className=\"NavLink\">MinorArcana</Link> */}\n</Navbar>\n</>)\n}","import React from 'react';\nimport DrawsContainer from './containers/DrawsContainer'\nimport CardsContainer from './containers/CardsContainer'\nimport NavBar from './NavBar'\nclass App extends React.Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        <NavBar/>\n          <div className=\"title\">\n            Tarot Trove\n          </div>\n        <DrawsContainer />\n        <CardsContainer />\n      </div>\n    );\n  }\n\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport drawReducer from './reducers/drawReducer'\nimport cardReducer from './reducers/cardReducer'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/styles.css';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst combinedReducer = combineReducers(\n  {draws: drawReducer, cards: cardReducer}\n)\n\nlet store = createStore(combinedReducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default function drawReducer(state = {draws: []}, action){\n  // debugger\n  switch(action.type){\n    case \"FETCH_DRAWS\":\n      return {draws: action.payload}\n    case \"CREATE_DRAW\":\n      return {...state, draws: [...state.draws, action.payload]}\n    case \"CREATE_INTERPRETATIONS\":\n          return {...state, draws: state.draws.map(draw => {\n            if(draw.id === action.payload.id){\n              return action.payload\n            }else{\n              return draw\n            }\n          })}\n    case \"DELETE_INTERPRETATION\":\n      return {...state, draws: state.draws.map(draw => {\n        if(draw.id === action.payload.id){\n          return action.payload\n        }else{\n          return draw\n        }\n      })}\n    default:\n        return state\n  }\n}","export default function cardReducer(state = [], action){\n  switch(action.type){\n    case \"FETCH_CARDS\":\n      return action.payload\n    default:\n        return state\n  }\n}"],"sourceRoot":""}