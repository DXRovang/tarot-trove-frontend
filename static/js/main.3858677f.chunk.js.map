{"version":3,"sources":["assets/tarotb.jpg","components/DrawForm.js","actions/createDraws.js","components/DrawList.js","components/Interpretations.js","components/Button.js","actions/deleteInterpretations.js","components/InterpretationForm.js","actions/createInterpretations.js","containers/InterpretationsContainer.js","components/Draw.js","actions/fetchCards.js","containers/DrawsContainer.js","actions/fetchDraws.js","components/CardList.js","components/Card.js","components/MajorArcana.js","components/MinorArcana.js","containers/CardsContainer.js","NavBar.js","App.js","index.js","reducers/drawReducer.js","reducers/cardReducer.js"],"names":["DrawForm","state","layout","card_ids","orientations","handleChange","e","setState","target","name","value","handleSumbit","preventDefault","formData","getOneCard","props","cards","randBool","createDraws","history","push","process","getThreeCards","threeBool","getFiveCards","fiveBool","getTenCards","tenBool","arr","Math","floor","random","length","id","base","r","indexOf","Container","Row","Col","sm","className","src","tarotb","onSubmit","onChange","this","React","Component","connect","dispatch","fetch","method","headers","body","JSON","stringify","then","json","draws","type","payload","DrawList","map","draw","to","created_at","slice","filterList","filter","Interpretations","liked","handleDelete","interpretation","deleteInterpretations","draw_id","interpretations","onClick","drawID","interpretationID","InterpretationForm","createInterpretations","InterpretationsContainer","Draw","find","match","params","card_id","i","image","size","offset","fetchCards","sort","a","b","DrawsContainer","fetchDraws","path","render","routerProps","exact","CardList","card","meaning_up","meaning_rev","summary","Card","desc","MajorArcana","CardImg","top","width","CardBody","CardTitle","tag","CardSubtitle","MinorArcana","CardsContainer","NavBar","Navbar","dark","expand","Nav","navbar","NavItem","NavLink","href","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3858677f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tarotb.04d2eaf0.jpg\";","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createDraws } from '../actions/createDraws'\nimport { Container, Row, Col } from 'reactstrap';\nimport tarotb from '../assets/tarotb.jpg';\n\n\nclass DrawForm extends React.Component{\n\n  state = {\n    layout: \"One-Card\",\n    card_ids: [],\n    orientations: []\n  }\n\n  render() {\n    return(\n      <Container>\n        <Row>\n          <Col sm=\"4\"> \n            <img className=\"first-card\"src={tarotb}/>\n          </Col>\n          <Col sm=\"4\">\n            <div className=\"center drawlist\">\n              <form onSubmit={e => this.handleSumbit(e)}>\n                <select onChange={this.handleChange} name=\"layout\" value={this.state.layout}>\n                  <option>One-Card</option>\n                  <option>Three-Cards</option>\n                  <option>Five-Cards</option>\n                  <option>Celtic Cross</option>\n                </select>\n                <button>Draw Cards</button>\n              </form>\n              <div className=\"blurb\">\n                <p>There are many types of spreads for Tarot reading, and many ways to understand the layout of each draw.</p>\n                <p>The One-Card draw is typically a daily ritual for those who want to check in with the energy of the day, or have an immediate situation that they would like perspective on.</p>\n                <p>The Three-Card draw is often used as a simple timeline:  past, present, future.</p>\n                <p>There are many variants on the Five-Card draw. One that we have found particularly interesting labels them in this manner:  1) the circumstance, 2) the advice, 3) the lesson, 4) the loss, 5) the gain.</p>\n                <p>The Celtic-Cross is the most complicated of the spreads.  The cards are numbered from the center (the hidden card being 1 and the cross being 2), then moving clockwise from the bottom and finishing off on the right side from bottom to top.  1) the circumstance, 2) the obstacle, 3) the inner mind, 4) the past, 5) the outer appearance, 6) the future, 7) the querent's state of mind, 8) the querent's support, 9) hopes/fears, 10) the outcome.</p>\n              </div>\n            </div>\n          </Col>\n          <Col sm=\"4\">\n            <img className=\"first-card\"src={tarotb}/>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // would like to do this as a switch\n  handleSumbit = (e) =>{\n    e.preventDefault() \n    \n    if(this.state.layout == \"One-Card\"){\n    let formData = {\n      layout: this.state.layout,\n      card_ids: [this.getOneCard(this.props.cards)],\n      orientations: [this.randBool()]\n     }\n     this.props.createDraws(formData)\n     this.props.history.push(process.env.PUBLIC_URL +'/draws')\n    }else if(this.state.layout == \"Three-Cards\"){\n      let formData = {\n        layout: this.state.layout,\n        card_ids: this.getThreeCards(this.props.cards),\n        orientations: this.threeBool()\n       }\n       this.props.createDraws(formData)\n       this.props.history.push('/draws')\n    }else if(this.state.layout == \"Five-Cards\"){\n      let formData = {\n        layout: this.state.layout,\n        card_ids: this.getFiveCards(this.props.cards),\n        orientations: this.fiveBool()\n       }\n       this.props.createDraws(formData)\n       this.props.history.push('/draws')\n    }else if(this.state.layout == \"Celtic Cross\"){\n      let formData = {\n        layout: this.state.layout,\n        card_ids: this.getTenCards(this.props.cards),\n        orientations: this.tenBool()\n       }\n       this.props.createDraws(formData)\n       this.props.history.push(process.env.PUBLIC_URL +'/draws')\n    }\n  }\n  \n  // look into refactoring down to 2 methods\n  getOneCard = (arr) => {\n    const randomIndex = Math.floor(Math.random() * arr.length);\n    const item = arr[randomIndex];\n    return item.id;\n  }\n  randBool = () => {\n    const rb = Math.random() < 0.5;\n    return rb;\n  }\n  // how does this work??\n  getThreeCards = (arr) => {\n    const base = [];\n    while(base.length < 3){\n      const r = Math.floor(Math.random() * arr.length);\n      if(base.indexOf(r) === -1) base.push(r);\n    }\n    return base;\n  }\n  threeBool = () => {\n    const base = []\n    while(base.length < 3){\n      base.push(this.randBool())\n    }\n    return base\n  }\n  getFiveCards = (arr) => {\n    const base = [];\n    while(base.length < 5){\n      const r = Math.floor(Math.random() * arr.length);\n      if(base.indexOf(r) === -1) base.push(r);\n    }\n    return base;\n  }\n  fiveBool = () => {\n    const base = []\n    while(base.length < 5){\n      base.push(this.randBool())\n    }\n    return base\n  }\n  getTenCards = (arr) => {\n    const base = [];\n    while(base.length < 10){\n      const r = Math.floor(Math.random() * arr.length);\n      if(base.indexOf(r) === -1) base.push(r);\n    }\n    return base;\n  }\n  tenBool = () => {\n    const base = []\n    while(base.length < 10){\n      base.push(this.randBool())\n    }\n    return base\n  }\n}\n\nexport default connect(null,{createDraws})(DrawForm)\n\n\n\n","export const createDraws = (formData) =>{\n  return (dispatch) => {\n    fetch('https://tarot-trove-backend.herokuapp.com/api/v1/draws', {\n      // fetch('http://127.0.0.1:3000/api/v1/draws', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        },\n      body: JSON.stringify(formData)\n    })\n    .then(r=>r.json())\n    .then(draws=> dispatch({\n      type: \"CREATE_DRAW\", \n      payload: draws\n    }))\n  }\n}","\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport { Container, Row, Col } from 'reactstrap';\nimport tarotb from '../assets/tarotb.jpg'\n\nclass DrawList extends React.Component{\nstate = {\n    layout: \"\",\n    card_ids: [],\n    orientations: []\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render(){\n    if(this.state.layout == \"\" || this.state.layout == \"All Spreads\"){\n      return(\n        <Container>\n          <Row>\n            <Col sm=\"4\">\n              <div className=\"blurb left drawlist\">\n                <p>Welcome!</p>\n                <p>This page is intended to aid <br></br>in the study of Tarot Divination.</p>\n                <p>You're welcome to browse our <br></br>previous draws and add your own <br></br>thoughts, \n                  or create a brand new draw <br></br>and be the first to offer your <br></br>interpretation!</p>\n                <p>We hope you enjoy the site.</p>\n              </div>\n            </Col>\n            <Col sm=\"auto\">\n              <img className=\"first-card\"src={tarotb}/>\n            </Col>\n            <Col sm=\"4\">\n              <div className='themed-container'>\n                <form className=\" list right option drawlist\" onSubmit={e => this.handleSumbit(e)}>\n                  <select onChange={this.handleChange} name=\"layout\" value={this.state.layout}>\n                    <option >All Spreads</option>\n                    <option >One-Card</option>\n                    <option >Three-Cards</option>\n                    <option >Five-Cards</option>\n                    <option >Celtic Cross</option>\n                  </select>\n                </form><br></br>\n                <div className=\"list\">{this.props.draws.draws ? this.props.draws.draws.map(draw => \n                  <div key={draw.id}><Link className=\"list right\" to={`/draws/${draw.id}`}>{draw.layout}: {draw.created_at.slice(0,10)}</Link></div>) : null}\n                </div>\n              </div>\n            </Col>\n        </Row>\n      </Container>\n      )\n    }else{\n      const fullList = this.props.draws.draws\n      const filterList = fullList.filter(draw => draw.layout == this.state.layout)\n      return(    \n      <Container>\n        <Row>\n          <Col sm=\"4\">\n            <div className=\"blurb left drawlist\">\n              <p>Welcome!</p>\n              <p>This page is intended to aid <br></br>in the study of Tarot Divination.</p>\n              <p>You're welcome to browse our <br></br>previous draws and add your own <br></br>thoughts, \n                or create a brand new draw <br></br>and be the first to offer your <br></br>interpretation!</p>\n              <p>We hope you enjoy the site.</p>\n          </div>\n          </Col>\n          <Col sm=\"auto\">\n            <img className=\"first-card\"src={tarotb}/>\n          </Col>\n          <Col sm=\"4\">\n            <form className=\"drawlist right list option\" onSubmit={e => this.handleSumbit(e)}>\n              <select onChange={this.handleChange} name=\"layout\" value={this.state.layout}>\n                <option >All Spreads</option>\n                <option >One-Card</option>\n                <option >Three-Cards</option>\n                <option >Five-Cards</option>\n                <option >Celtic Cross</option>\n              </select>\n            </form><br></br>\n            <div className=\"right list\" >{this.props.draws.draws ? filterList.map(draw => \n              <div key={draw.id}><Link className=\"list\" to={`/draws/${draw.id}`}>{draw.layout}: {draw.created_at.slice(0,10)}</Link></div>) : null}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      )\n    }\n  }\n}\n\nexport default DrawList\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteInterpretations } from '../actions/deleteInterpretations'\nimport Button from './Button'\n\nclass Interpretations extends React.Component{\n\n  state = {\n    liked: 0\n  }\n\n  handleDelete = (interpretation) =>{\n  this.props.deleteInterpretations(interpretation.draw_id, interpretation.id)\n    }\n \n  render(){\n  \n  return (\n    \n    <div className=\"int blurb\">\n      Interpretation(s): \n      {this.props.draw ? this.props.draw.interpretations.map(interpretation => \n        <div key={interpretation.id}>\n          \n          <button onClick={() => this.handleDelete(interpretation)}>x</button> {interpretation.body}\n          {/* <Button /> */}\n          </div>) : null}<br></br>\n    </div>\n  )\n}}\n\nexport default connect(null,{ deleteInterpretations })(Interpretations)\n","import React from 'react'\n\nexport default class Button extends React.Component{\n\n  state = {\n    liked: 0\n  }\n\n  handleLike = () =>{\n    let newCount = this.state.liked + 1\n    this.setState(\n     {liked: newCount}\n    )}\n\n  render(){\n    \n    return(\n      <div>\n        <button onClick={this.handleLike} >Likes: {this.state.liked}</button>\n      </div>\n    )\n  }\n\n}","export const deleteInterpretations = (drawID, interpretationID) =>{\n  return (dispatch) => {\n    fetch(`https://tarot-trove-backend.herokuapp.com/api/v1/draws/${drawID}/interpretations/${interpretationID}`, {\n      method: \"DELETE\",\n    })\n    .then(r => r.json())\n    .then(draw=> dispatch({\n      type: \"DELETE_INTERPRETATION\", \n      payload: draw\n    }))\n  }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createInterpretations } from '../actions/createInterpretations'\n\nclass InterpretationForm extends React.Component{\n\n  state = {\n    body: \"\",\n  }\n  \n  handleChange = (e) =>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSumbit = (e) =>{\n    e.preventDefault()\n    this.props.createInterpretations(this.state, this.props.draw.id)\n    this.setState({\n      body: \"\"\n    })\n  \n  }\n\n  render() {\n    return(\n      <div className=\"Field\">\n        <form onSubmit={e => this.handleSumbit(e)}>\n          <textarea onChange={this.handleChange} \n          type='text' name=\"body\" value={this.state.body}/><br></br>\n          {/* name should match what's in the state */}\n          <button>Submit Interpretation</button>\n        </form>\n  {/* onSubmit and onChange are identical, the event isn't necessary */}\n      </div>\n    )\n  }\n}\n\nexport default connect(null,{createInterpretations})(InterpretationForm)","export const createInterpretations = (interpretation, drawID) =>{\n  return (dispatch) => {\n    fetch(`https://tarot-trove-backend.herokuapp.com/api/v1/draws/${drawID}/interpretations`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        },\n      body: JSON.stringify(interpretation)\n    })\n    .then(r=>r.json())\n    .then(draw=> dispatch({\n      type: \"CREATE_INTERPRETATIONS\", \n      payload: draw\n    }))\n  }\n}","import React from 'react'\nimport Interpretations from '../components/Interpretations'\nimport InterpretationsForm from '../components/InterpretationForm'\n\nclass InterpretationsContainer extends React.Component{\n  render(){\n    return(\n      <div>\n        <Interpretations draw={this.props.draw}/>\n        <InterpretationsForm draw={this.props.draw}/>\n      </div>\n    )\n  }\n}\n\nexport default InterpretationsContainer\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport InterpretationsContainer from '../containers/InterpretationsContainer'\nimport { Container, Row, Col } from 'reactstrap';\n\n \nconst Draw = props =>{ \n\n  let draw = props.draws.draws.find(draw => draw.id == props.match.params.id)\n\n  if(draw && draw.layout != \"Celtic Cross\"){\n    return(\n      <div className=\"notCross\" >\n      <div className=\"blurb\">Drawn: {draw ? (draw.created_at.slice(0,10)): null}<br></br></div>\n        {draw && (props.cards.length > 0) ? \n          <div>{draw.card_ids.map((card_id, i) => \n            <div key={card_id.id}> \n              <Link to={`/cards/${card_id - 1}`}>\n                {draw.orientations[i] === false ? \n                <img className=\"flip card space size\" src={props.cards[card_id -1].image}/>\n                : <img className=\"card space size\" src={props.cards[card_id - 1].image}/>}\n              </Link>\n            </div>)}\n          </div>\n        : null}\n        <InterpretationsContainer draw={draw} />\n      </div>)\n    }else if(draw && draw.layout == \"Celtic Cross\"){\n      return(\n        <Container>\n          {draw && (props.cards.length > 0) ? \n          <Container>\n      <div className=\"blurb\">Drawn: {draw ? (draw.created_at.slice(0,10)): null}<br></br></div>\n            <Row>\n            <Col sm={{ size: true, offset: 4 }}>\n              <div key={draw.card_ids[0].id}>\n                <Link to={`/cards/${draw.card_ids[0] - 1}`}>\n                      {draw.orientations[0] === false ? \n                      <img className=\"flip celtic size\" src={props.cards[draw.card_ids[0] -1].image}/>\n                      : <img className=\"celtic size\" src={props.cards[draw.card_ids[0] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col sm={{ size: true, offset: 4 }}>\n              <div key={draw.card_ids[1].id}>\n                <Link to={`/cards/${draw.card_ids[1] - 1}`}>\n                      {draw.orientations[1] === false ? \n                      <img className=\"flip celtic size\" src={props.cards[draw.card_ids[1] -1].image}/>\n                      : <img className=\"celtic size\" src={props.cards[draw.card_ids[1] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            </Row>\n\n            <Row>\n            <Col >\n              <div key={draw.card_ids[2].id}>\n                <Link to={`/cards/${draw.card_ids[2] - 1}`}>\n                      {draw.orientations[2] === false ? \n                      <img className=\"flip celtic size\" src={props.cards[draw.card_ids[2] -1].image}/>\n                      : <img className=\"celtic size\" src={props.cards[draw.card_ids[2] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col sm={{ size: true, offset: 2}}>\n              <div key={draw.card_ids[3].id}>\n                <Link to={`/cards/${draw.card_ids[3] - 1}`}>\n                      {draw.orientations[3] === false ? \n                      <img className=\"flip celtic base size\" src={props.cards[draw.card_ids[3] -1].image}/>\n                      : <img className=\"celtic base size\" src={props.cards[draw.card_ids[3] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col >\n              <div key={draw.card_ids[4].id}>\n                <Link to={`/cards/${draw.card_ids[4] - 1}`}>\n                      {draw.orientations[4] === false ? \n                      <img className=\"flip celtic cross size\" src={props.cards[draw.card_ids[4] -1].image}/>\n                      : <img className=\"celtic cross size\" src={props.cards[draw.card_ids[4] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col >\n              <div key={draw.card_ids[5].id}>\n                <Link to={`/cards/${draw.card_ids[5] - 1}`}>\n                      {draw.orientations[5] === false ? \n                      <img className=\"flip celtic future size\" src={props.cards[draw.card_ids[5] -1].image}/>\n                      : <img className=\"celtic future size\" src={props.cards[draw.card_ids[5] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col  >\n              <div key={draw.card_ids[6].id}>\n                <Link to={`/cards/${draw.card_ids[6] - 1}`}>\n                      {draw.orientations[6] === false ? \n                      <img className=\"flip celtic size\" src={props.cards[draw.card_ids[6] -1].image}/>\n                      : <img className=\"celtic size\" src={props.cards[draw.card_ids[6] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n\n\n            </Row>\n            <Row>\n            <Col sm={{ size: true, offset: 4 }}>\n              <div key={draw.card_ids[7].id}>\n                <Link to={`/cards/${draw.card_ids[7] - 1}`}>\n                      {draw.orientations[7] === false ? \n                      <img className=\"flip celtic size\" src={props.cards[draw.card_ids[7] -1].image}/>\n                      : <img className=\"celtic size\" src={props.cards[draw.card_ids[7] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            <Col sm={{ size: true, offset: 4 }}>\n              <div key={draw.card_ids[8].id}>\n                <Link to={`/cards/${draw.card_ids[8] - 1}`}>\n                      {draw.orientations[8] === false ? \n                      <img className=\"flip celtic size\" src={props.cards[draw.card_ids[8] -1].image}/>\n                      : <img className=\"celtic size\" src={props.cards[draw.card_ids[8] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n\n            </Row>\n            <Row>\n            <Col sm={{ size: true, offset: 10 }}>\n              <div key={draw.card_ids[9].id}>\n                <Link to={`/cards/${draw.card_ids[9] - 1}`}>\n                      {draw.orientations[9] === false ? \n                      <img className=\"flip celtic size\" src={props.cards[draw.card_ids[9] -1].image}/>\n                      : <img className=\"celtic size\" src={props.cards[draw.card_ids[9] - 1].image}/>}\n                </Link>\n              </div>\n            </Col>\n            \n\n            </Row>\n          \n          </Container>\n\n          : null}\n\n          <InterpretationsContainer draw={draw} /> \n          \n        </Container>\n        )\n    }else{\n      return(\n        null\n      )\n    }\n  }\n  export default Draw\n\n","export function fetchCards(){\n  return (dispatch) => {\n    fetch('https://tarot-trove-backend.herokuapp.com/api/v1/cards')\n    .then(r=>r.json())\n    .then(cards=> dispatch({\n      type: \"FETCH_CARDS\", \n      // look at this\n      payload: cards.sort((a,b)=>a.id - b.id)\n    }))\n  }\n}","\nimport React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport DrawForm from '../components/DrawForm'\nimport DrawList from '../components/DrawList'\nimport Draw from '../components/Draw'\nimport { fetchDraws } from '../actions/fetchDraws'\nimport { fetchCards } from '../actions/fetchCards'\n\n\nclass DrawsContainer extends React.Component{\n\ncomponentDidMount(){\n  this.props.fetchDraws()\n  this.props.fetchCards()\n}\n\n    render(){\n      return(\n        <>\n          <Switch>\n            <Route path='/draws/new' render={(routerProps) => \n                <DrawForm {...routerProps} cards={this.props.cards} draws={this.props.draws} />} /> \n            <Route exact path='/draws' render={(routerProps) => \n                <DrawList {...routerProps} draws={this.props.draws} />} />\n            <Route path='/draws/:id' render={(routerProps) => \n              <>\n                <Draw {...routerProps} cards={this.props.cards} draws={this.props.draws} />\n              </> \n            }/>\n          </Switch>\n        </>\n      )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    draws: state.draws,\n    cards: state.cards\n  }\n}\n\nexport default connect(mapStateToProps, {fetchDraws, fetchCards})(DrawsContainer)","export function fetchDraws(){\n  return (dispatch) => {\n    fetch('https://tarot-trove-backend.herokuapp.com/api/v1/draws')\n    .then(r=>r.json())\n    .then(draws=> dispatch({\n      type: \"FETCH_DRAWS\", \n      payload: draws\n    }))\n  }\n}\n","import React from 'react'\n\nconst getRandomItem = (arr) => {\n  const randomIndex = Math.floor(Math.random() * arr.length);\n  const item = arr[randomIndex];\n  return item;\n}\n\nconst CardList = props =>{\n\n  const card = getRandomItem(props.cards);\n\n  return(\n    <div className=\"Field left\">\n       {card ? <img className=\"card left\" src={card.image}/> : null}<br></br>\n    <div className=\"single left\">\n    <div className=\"space\">Meaning(up): {card ? card.meaning_up : null}</div>\n    <div className=\"space\">Meaning(rev): {card ? card.meaning_rev : null}</div><br></br>\n    <div className=\"space\">Summary: {card ? card.summary : null}</div></div>\n  </div>\n  )\n}\n\nexport default CardList","import React from 'react'\n\nconst Card = props =>{\n  // debugger\n  let card = props.cards[props.match.params.id]\n  \n  return(\n    <div className=\"single\">\n    {card ? <img className=\"card left size\"src={card.image}/> : null}<br></br>\n    <div className=\"left\">\n    <div>Description: {card ? card.desc : null}</div><br></br>\n    <div>Meaning(up): {card ? card.meaning_up : null}</div><br></br>\n    <div>Meaning(rev): {card ? card.meaning_rev : null}</div><br></br>\n    <div>Summary: {card ? card.summary : null}</div></div>\n  </div>\n  )\n}\n\nexport default Card","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {\n  Card, Container, Row, Col, CardImg, CardTitle,\n  CardSubtitle, CardBody\n} from 'reactstrap';\n\nconst MajorArcana = props =>{\n  return(\n\n    <Container>\n            <Row>\n        <div>{props.cards.slice(0,1).map(card => \n        <Col>\n          <Card key={card.id}>\n            <Link to={`/cards/${card.id - 1}`}>\n              <CardImg top width=\"100%\" src={card.image} />\n              <CardBody>          \n                <CardTitle className=\"CardTitle\"tag=\"h5\">{card.name}</CardTitle>\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>\n              </CardBody>\n            </Link>\n          </Card>\n        </Col>\n       )}</div>\n      </Row>\n      <Row>\n        <div>{props.cards.slice(1,8).map(card => \n        <Col>\n          <Card key={card.id}>\n            <Link to={`/cards/${card.id - 1}`}>\n              <CardImg top width=\"100%\" src={card.image} />\n              <CardBody>          \n                <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>\n              </CardBody>\n            </Link>\n          </Card>\n        </Col>\n       )}</div>\n      </Row>\n      <Row>\n        <div>{props.cards.slice(8,15).map(card => \n        <Col>\n          <Card key={card.id}>\n            <Link to={`/cards/${card.id - 1}`}>\n              <CardImg top width=\"100%\" src={card.image} />\n              <CardBody>          \n                <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>    \n              </CardBody>\n            </Link>\n          </Card>\n        </Col>\n       )}</div>\n      </Row>\n      <Row>\n        <div>{props.cards.slice(15,22).map(card => \n        <Col>\n          <Card key={card.id}>\n            <Link to={process.env.PUBLIC_URL +`/cards/${card.id - 1}`}>\n              <CardImg top width=\"100%\" src={card.image} />\n              <CardBody>          \n                <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>\n              </CardBody>\n            </Link>\n          </Card>\n        </Col>\n       )}</div>\n      </Row>\n  \n    </Container>\n  )\n}\n\nexport default MajorArcana\n\n\n    // <CardGroup>\n    //   <div>{props.cards.slice(0,21).map(card => \n    //     <Card key={card.id}>\n    //       <Link to={`/cards/${card.id - 1}`}>\n    //         <CardImg top width=\"100%\" src={card.image} />\n    //         <CardBody>          \n    //           <CardTitle tag=\"h5\">{card.name}</CardTitle>\n    //           <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.id - 1}</CardSubtitle>\n    //           <CardText>This is a wider card with supporting text below.</CardText>\n    //           <Button>Button</Button>\n    //         </CardBody>\n    //       </Link>\n    //     </Card>\n    //    )}</div>\n    // </CardGroup>","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {\n  Card, Container, Row, Col, CardImg, CardTitle, \n   CardBody\n} from 'reactstrap';\n\nconst MinorArcana = props =>{\n  return(  \n    \n    <Container>\n      <div className=\"suit\">WANDS</div>\n    <Row className=\"xenter\" >\n      <div >{props.cards.slice(22,29).map(card => \n      <Col >\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n            {/* <CardImg className=\"size\" src={card.image} /> */}\n            <CardImg top width=\"100%\" src={card.image} />\n\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(29,36).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\"tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row  >\n    <div className=\"suit\">CUPS</div>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(36,43).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(43,50).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <div className=\"suit\">PENTACLES</div>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(50,57).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(57,64).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <div className=\"suit\">SWORDS</div>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(64,71).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n    <Row className=\"xenter\" >\n      <div>{props.cards.slice(71,78).map(card => \n      <Col>\n        <Card key={card.id}>\n          <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n            <CardBody>          \n              <CardTitle className=\"CardTitle\" tag=\"h5\">{card.name}</CardTitle>\n            </CardBody>\n          </Link>\n        </Card>\n      </Col>\n     )}</div>\n    </Row>\n</Container>\n\n\n  )\n}\n\nexport default MinorArcana\n\n  {/* <CardGroup>\n    <div>{props.cards.slice(22,78).map(card => \n      <Card key={card.id}>\n        <Link to={`/cards/${card.id - 1}`}>\n          <CardImg top width=\"100%\" src={card.image} />\n          <CardBody>          \n            <CardTitle tag=\"h5\">{card.name}</CardTitle>\n          </CardBody>\n        </Link>\n      </Card>\n    )}</div>\n  </CardGroup> */}","\nimport React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CardList from '../components/CardList'\nimport Card from '../components/Card'\nimport { fetchCards } from '../actions/fetchCards'\nimport MajorArcana from '../components/MajorArcana'\nimport MinorArcana from '../components/MinorArcana'\n\n\nclass CardsContainer extends React.Component{\n\ncomponentDidMount(){\n  this.props.fetchCards()\n}\n\n    render(){\n      return(\n        <>\n          <Switch>\n            <Route exact path='/cards'>\n                <CardList cards={this.props.cards}/>\n            </Route>\n            <Route path='/cards/:id' render={(routerProps) => \n                <Card {...routerProps} cards={this.props.cards} />}/>\n            <Route path='/majorarcana'>\n                <MajorArcana cards={this.props.cards}/>\n            </Route>\n            {/* <Route path={process.env.PUBLIC_URL +'/minorarcana'}> */}\n            <Route exact path='/minorarcana'>\n                <MinorArcana cards={this.props.cards}/>\n            </Route>\n          </Switch>\n        </>\n      )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    cards: state.cards\n  }\n}\n\nexport default connect(mapStateToProps, {fetchCards})(CardsContainer)","// import {Link} from 'react-router-dom'\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavLink,\n\n} from 'reactstrap';\n\nexport default function NavBar(){\n\nreturn (<>\n<Navbar dark expand=\"md\">\n<Nav className=\"mr-auto\" navbar>\n            <NavItem>\n  <NavLink href={process.env.PUBLIC_URL +'/draws'}>Readings</NavLink>\n  </NavItem>\n  <NavItem>\n  <NavLink href={process.env.PUBLIC_URL +\"/draws/new\"}>New Draw</NavLink>\n  </NavItem>\n  <NavItem>\n  <NavLink href={process.env.PUBLIC_URL +\"/cards\"}>Random Card</NavLink>\n  </NavItem>\n  <NavItem>\n  <NavLink href={process.env.PUBLIC_URL +\"/majorarcana\"}>Major Arcana</NavLink>\n  </NavItem>\n  <NavItem >\n  <NavLink  href={process.env.PUBLIC_URL +\"/minorarcana\"}>Minor Arcana</NavLink>\n  </NavItem>\n  </Nav>\n  {/* <Link to=\"/draws\" className=\"NavLink\">Readings</Link>\n  <Link to=\"/draws/new\" className=\"NavLink\">New Draw</Link>\n  <Link to=\"/cards\" className=\"NavLink\">Random Card</Link>\n  <Link to=\"/majorarcana\" className=\"NavLink\">MajorArcana</Link>\n  <Link to=\"/minorarcana\" className=\"NavLink\">MinorArcana</Link> */}\n</Navbar>\n</>)\n}","import React from 'react';\nimport DrawsContainer from './containers/DrawsContainer'\nimport CardsContainer from './containers/CardsContainer'\nimport NavBar from './NavBar'\nclass App extends React.Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        <NavBar/>\n          <div className=\"title\">\n            the Tarot Trove\n          </div>\n        <DrawsContainer />\n        <CardsContainer />\n      </div>\n    );\n  }\n\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport drawReducer from './reducers/drawReducer'\nimport cardReducer from './reducers/cardReducer'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/styles.css';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst combinedReducer = combineReducers(\n  {draws: drawReducer, cards: cardReducer}\n)\n\nlet store = createStore(combinedReducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default function drawReducer(state = {draws: []}, action){\n  // debugger\n  switch(action.type){\n    case \"FETCH_DRAWS\":\n      return {draws: action.payload}\n    case \"CREATE_DRAW\":\n      return {...state, draws: [...state.draws, action.payload]}\n    case \"CREATE_INTERPRETATIONS\":\n          return {...state, draws: state.draws.map(draw => {\n            if(draw.id === action.payload.id){\n              return action.payload\n            }else{\n              return draw\n            }\n          })}\n    case \"DELETE_INTERPRETATION\":\n      return {...state, draws: state.draws.map(draw => {\n        if(draw.id === action.payload.id){\n          return action.payload\n        }else{\n          return draw\n        }\n      })}\n    default:\n        return state\n  }\n}","export default function cardReducer(state = [], action){\n  switch(action.type){\n    case \"FETCH_CARDS\":\n      return action.payload\n    default:\n        return state\n  }\n}"],"sourceRoot":""}